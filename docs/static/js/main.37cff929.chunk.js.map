{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","Components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGTC,mBAAS,IAHA,mBAGtCC,EAHsC,KAG1BC,EAH0B,KAe7C,OACK,0BAAMC,SATQ,SAACC,GACfA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACvBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAMd,4BAAKD,GACF,2BACAQ,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACA,mCACbC,EAFa,iDAEoCC,UAAUH,GAF9C,6BACA,oCADA,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAY,IAAD,EACVd,mBAAS,CAC/BqB,KAAM,GACNa,SAAQ,IAHwB,mBAC7BC,EAD6B,KACtBC,EADsB,KAkBpC,OAbAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAItB,CAACpB,IAEIqB,EDfiBK,CAAa1B,GAA9BO,EAF4B,EAE5BA,KAAMa,EAFsB,EAEtBA,QAIb,OACI,oCACA,wBAAIJ,UAAU,qCAAd,IAAqDhB,EAArD,KACCoB,GAAS,uBAAGJ,UAAU,oCAAb,WACR,yBAAKA,UAAU,aAELT,EAAKE,KAAI,SAAAC,GAAG,OACT,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACJD,UEhBfkB,EAAe,WAAO,IAAD,EACM1C,mBAAS,CAAC,WADhB,mBACvB2C,EADuB,KACX5C,EADW,KAK9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEI4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACA2B,IAAK3B,EACLA,SAAUA,U,MCb9B8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.37cff929.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({setCategories}) => {\r\n   \r\n\r\n   const [inputValue, setInputValue] = useState('');\r\n   const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n   }\r\n   const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n             setCategories(cats => [inputValue, ...cats,]);\r\n            setInputValue('');\r\n        }\r\n    // console.log('Submit hecho');\r\n   }\r\n   return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>{inputValue}</h1>\r\n               <input \r\n               type=\"text\"\r\n               value={inputValue}\r\n               onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs = async(category)=>{\r\n        const apiKey = 'pXCeps1OZJX4Yf90I4iehoAkPgq7nL2s';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${apiKey}`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    //  console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n  \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n        {loading&&<p className=\"animate__animated animate__flash\">loading</p>}\r\n         {<div className=\"card-grid\">\r\n                {\r\n                    data.map(img => (\r\n                       <GifGridItem \r\n                       key={img.id}\r\n                       { ...img }\r\n                       />\r\n                    ))\r\n                }\r\n           \r\n        </div>}\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(imgs=>{\r\n        //    setTimeout(()=>{\r\n            //    console.log(imgs);   \r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                });\r\n            // }, 3000);\r\n        })\r\n    },[category])\r\n    \r\n    return state; //{data:[], loading:true}\r\n}","import React,{useState} from 'react'\r\nimport {AddCategory} from './AddCategory'\r\nimport { GifGrid } from './GifGrid';\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Boruto']);\r\n    // const handled = ()=>{\r\n    //   setCategories(cats => [...cats,'Boruto']);\r\n    // }\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n          \r\n            <ol>\r\n                {\r\n                categories.map(category=>\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category}/>\r\n                )\r\n            }\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './Components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}